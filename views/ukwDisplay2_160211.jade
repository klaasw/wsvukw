extends layout
block append testcode
 script.






block content  
  div.container-fluid
   div.content
    div.col-md-12
     //Scahaltflächen anzeigen     
      

     div.row
      // div.col-md-6
      //  ul
      //   each val, index in gesamteKonfig.FunkstellenReihe
      //    li=index+'-'+val+'...'+gesamteKonfig.FunkstellenDetails[val[0]].MKA
      //ul 
      //  each val, index in gesamteKonfig.FunkstellenDetails
      //   li=index+'-'+val.MKA
         
        
      each val, index in gesamteKonfig.FunkstellenReihe
       if index=='Button11'||index=='Button21'||index=='Button31'
        div.row

       div.col-md-2(id=index+'panel')(style="padding-left: 5px;padding-right: 5px;")
        div.panel.panel-default(class=(val[0]== 'frei' ? 'hidden' :''),style="float:left")
         //Block Mithören
         div(id=gesamteKonfig.ArbeitsplatzGeräte[gesamteKonfig.MhanZuordnung[val[0]]])(style="width:100%")
          //Schaltfläche MHAN
          div.text-center(style="width:100%;border-top-left-radius: 3px;border-top-right-radius: 3px;background-color:#f5f5f5;padding-left: 3px;padding-right: 3px") #{(gesamteKonfig.MhanZuordnung[val[0]] ? gesamteKonfig.MhanZuordnung[val[0]] :'--ohne--')}
           div.pull-right
            span.glyphicon.glyphicon-chevron-down(data-toggle='popover', container='panel-body' ,data-placement='right', title="Popover title", data-html='true',data-content='<b>Vivamus</b> sagittis lacus vel augue laoreet rutrum faucibus.')
          div.text-center.bg-success(style="float:left; width:50%")
           //Schaltfläche Ship
           div(id=gesamteKonfig.ArbeitsplatzGeräte[gesamteKonfig.MhanZuordnung[val[0]]]+'ship')(onclick='schalteKanal(event,this)',style="cursor: pointer;z-index:-1;float:left;width:20%;height: 44px;padding-top: 12px;font-size: 16px;font-weight: bold;")
            span S
           div.pull-right
            span#test 50
            //span.glyphicon.glyphicon-volume-up(id=gesamteKonfig.ArbeitsplatzGeräte[gesamteKonfig.MhanZuordnung[val[0]]]+'ship_pegel')(onclick='setzeLautstärke(this.id)',style="cursor: pointer;padding-top: 15px;padding-bottom: 15px;padding-left: 10px;padding-right: 10px;",data-toggle='modal',data-target='#pegelModal')
            span.glyphicon.glyphicon-volume-up(id=gesamteKonfig.ArbeitsplatzGeräte[gesamteKonfig.MhanZuordnung[val[0]]]+'ship_pegel')(style="cursor: pointer;padding-top: 15px;padding-bottom: 15px;padding-left: 10px;padding-right: 10px;", data-toggle='popover', container='panel-body' ,data-placement='right', data-html='true',data-content="<input id='ex1', type='text', data-slider-min='0', data-slider-max='100', data-slider-step='10' ,data-slider-orientation='vertical'>")
          div.text-center(style="float:left; width:50%;background-color:#f5f5f5")
           //Schaltfläche Pilot
           div(style="float:left;width:20%;height: 44px;padding-top: 12px;font-size: 16px;font-weight: bold;")
            span L
           div.pull-right
            span#test2 100
            span.glyphicon.glyphicon-volume-up(onclick='setzeLautstärke(this.id)',style="cursor: pointer;padding-top: 15px;padding-bottom: 15px;padding-left: 10px;padding-right: 10px;",data-toggle='popover', container='panel-body' ,data-placement='right', title="Popover title", data-html='true',data-content='<p>Lautstärke per Softwareeinstellen<input id="ex1" type="text" data-slider-min="0" data-slider-max="100" data-slider-step="10" data-slider-orientation="vertical"/></p>')
         //Schaltfläche Kanal
         div(id=index)(onclick='schalteKanal(event,this,"SPAN")',style="float:left; width:100%; cursor: pointer;z-index:-1;padding-top: 3px;padding-bottom: 3px")
          if gesamteKonfig.FunkstellenDetails[val[0]].MKA
           h2.text-right(id=index)(style="margin-top: 25px;margin-bottom: 5px;") 
            span #{gesamteKonfig.FunkstellenDetails[val[0]].channel}
            button.btn.btn-default.btn-lg.dropdown-toggle(type='button', data-toggle='modal',data-target='#mkaModal',style="margin-left:30%;padding-top: 2px;padding-bottom: 2px;height: 36px;margin-top: -5px;",onclick='setzeKanalMka(event,this)')
             span.caret
          else
           h2.text-center(id=index)(style="margin-top: 25px;margin-bottom: 5px;") #{gesamteKonfig.FunkstellenDetails[val[0]].channel}
          //Atis Kennung
          div.panel.panel-default.text-center(style="float:left;width:100%;margin-top:25px;margin-bottom:0px") ATIS 
          //Funkstellen
          div(style="float:left;padding-left: 3px;padding-right: 3px;padding-top: 2px;padding-bottom: 2px;height:25px;width:100%") 
           div.bg-success(id=(val[0] ? gesamteKonfig.FunkstellenDetails[val[0]].id :'--ohne--'))(style="float:left; width:50%;border: 1px solid;border-color:#ddd;padding-left: 3px;padding-right: 3px")
            //Geräte von der Komponeten-ID abschneiden
            - test = val[0] ? val[0] : '---------------------';
            - test2 = test.substr(15,6);
            span #{val[0] ? test2 :'-ohne-'}
            //div.pull-right 
            // span H
           div.bg-success(id=(val[1] ? gesamteKonfig.FunkstellenDetails[val[1]].id :'--ohne--'))(style="float:left; width:50%;border: 1px solid;border-color:#ddd;padding-left: 3px;padding-right: 3px")
            //Geräte von der Komponeten-ID abschneiden
            - test = val[1] ? val[1] : '---------------------';
            - test2 = test.substr(15,6);
            span #{val[1] ? test2 :'-ohne-'}
            //div.pull-right 
            // span R
         //SPAN 
         div.text-center(id=gesamteKonfig.ArbeitsplatzGeräte.SPAN01)(style="float:left; width:100%;border-bottom-left-radius: 3px;border-bottom-right-radius: 3px;padding-left: 3px;padding-right: 3px") SPAN
           div.pull-right
            span.glyphicon.glyphicon-chevron-down(data-toggle='popover', container='panel-body' ,data-placement='right', title="Popover title", data-html='true',data-content='<b>Vivamus</b> sagittis lacus vel augue laoreet rutrum faucibus.')



      //Test für Slider
      div#popover-content.hidden
       p Lautstärke per Softwareeinstellen
       //input#ex1(data-slider-id='ex1Slider', type='text', data-slider-min='0', data-slider-max='100', data-slider-step='1', data-slider-value='15',data-slider-orientation='vertical')
       input#ex1(type='text', data-slider-min='0', data-slider-max='100', data-slider-step='10' ,data-slider-orientation='vertical')



      



      // Modalfenster für MKA Kanalwahl
      #mkaModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='mkaModalLabel')
       .modal-dialog(role='document')
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true')
            h4#mkaModalLabel.modal-title Modal title
          .modal-body
           p
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 1
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 2
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 3
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 4
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 5
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 6
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 7
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 8
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 9
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 10
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 11
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 12
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 69
            button.btn.btn-default.btn-lg(type='button',onclick='setzeKanal(this)',data-dismiss='modal') 68

          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Close
            button.btn.btn-primary(type='button') Save changes

      

     
block append testcode2
 script.
  //Aktuelles NavElement Hervorheben
  //$(document).ready(function(){
  // $(".nav").find(".active").removeClass("active")
  // $('#ukw').addClass('active')
  //})

  var test=false;
  var ApID = 'JA_NvD';
  var SPAN = '1-H-RFD-WHVVKZ-SPAN-01';
  var MhanZuordnung={"MHAN01":"1-H-RFD-WHVVTA-FKEK-2","MHAN02":"1-H-RFD-TETTEN-FKEK-2","MHAN03":"1-H-RFD-HELGLT-FKEK-1","MHAN04":"1-H-RFD-WHVVTA-FKMK-1"};
  var ApFunkstellen = {
    '1-H-RFD-WHVVTA-FKEK-3':{id:'1-H-RFD-WHVVTA-FKEK-3', MKA:false, Kanal:'16',kurzname:'WHV',aufgeschaltet:null},
    '1-H-RFD-TETTEN-FKEK-3':{aufgeschaltet:null}
    };
  var ArbeitsplatzGeräte;
  var Einzel = true;
  var einzelStatus
  var gruppenStatus
  var aktuellerUKWserver = location.protocol + '//' + location.hostname
  



  //WebSocket Verbindung herstellen
  var socket = io(aktuellerUKWserver+':3001');


 

  //Optionen für Notify festlegen
  $.notifyDefaults({
     // settings
   element: 'body',
   position: null,
   type: "info",
   allow_dismiss: true,
   newest_on_top: false,
   showProgressbar: false,
   placement: {
    from: "top",
    align: "right"
   },
   offset: 20,
   spacing: 10,
   z_index: 1031,
   delay: 5000,
   timer: 1000,
   url_target: '_blank',
   mouse_over: null,
   animate: {
    enter: 'animated fadeInDown',
    exit: 'animated fadeOutUp'
    },
    onShow: null,
    onShown: null,
    onClose: null,
    onClosed: null,
    icon_type: 'class',
    template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
    '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
    '<span data-notify="icon"></span> ' +
    '<span data-notify="title">{1}</span> ' +
    '<span data-notify="message">{2}</span>' +
    '<div class="progress" data-notify="progressbar">' +
    '<div class="progress-bar progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' +
    '</div>' +
    '<a href="{3}" target="{4}" data-notify="url"></a>' +
    '</div>' 
    });
  
  //Variablen zum Arbeitsplatz laden
  $.get( "ukwKonfig", function( data ) { //IP-Adress nur als Platzhalter zum Testen
     ApFunkstellen=data.FunkstellenDetails;
     SPAN=data.ArbeitsplatzGeräte.SPAN01
     MhanZuordnung=data.MhanZuordnung
     ArbeitsplatzGeräte=data.ArbeitsplatzGeräte


     lautsprecherAufschalten(MhanZuordnung);
   }); 


    
    


   //Popover und Slider aktivieren
   //Slider und Popover für Lautstärke initialisieren
   //Lautstärke noch in AP Einstellungen speichern bzw laden
   function pop_slider (){
    //1. Alle Popover beim Laden anzeigen um css Anpassungen aus Javascript zu setzen
    $('[data-toggle="popover"]').popover('show')
    //$('[data-toggle="popover"]').popover()
    //CSS Eigenschaften setzen, da sonst die Parent Eigenschaften genommen werden
    $('.popover-title').css("background-color", "#9FC53B");
    $('.popover').css("background-color", "red");

    //Eventhandler beim Anzeige des Popover
    //Dann aus Inputfeld einen Slider machen
    $('[data-toggle="popover"]').on('shown.bs.popover', function () {
      $('#ex1').slider({
          reversed: true,
          tooltip:'always'
        });
      console.log(this)
      //Id ermitteln und gesetzten werden auf Slider setzen
      geklickteID=this.id
      aktuellerPegel=parseInt($('#'+geklickteID).prev().text())
      $('#ex1').slider('setValue', aktuellerPegel)
      
      //Event beim Sliden des Sliders
      $('#ex1').on('change', function (ev) {
                       
            //$('#ex1').offsetParent().attr('class'))
            //sliderVal = ev.value;
            
            //Wert auf Textfeld schreiben
            $('#'+geklickteID).prev().text(ev.value.newValue)
            setzeLautstärke(geklickteID, ev.value.newValue)



      });//Slide Event zu
    })//Popover Event zu
    
    //2. Alle Popover wieder schließen
    $('[data-toggle="popover"]').popover('hide')
    
   };

   //Initialisierung
   pop_slider();
  
  /**
  $("[data-toggle=popover]").popover();
  $('.popover-title').css("backgrouond-color", "#9FC53B"); 
  $('.popover').css("background-color", "red");
  **/
  
  

  
  //Mithörlautsprecher aufschalten
  function lautsprecherAufschalten(mhan){
  	console.log(mhan)
  	for (var funkstelle in mhan){
      socket.emit('chat message',{'FstID':funkstelle, 'ApID':ApID, 'SPAN':ArbeitsplatzGeräte[mhan[funkstelle]], 'aktion':'schaltenEinfach'})
  		
  	}
  }

  //Prüfe ob Wert in Objekt vorkommt
  function hatWert(obj, value) {
   for(var id in obj) {
     if(obj[id] == value) {
      return true;
     }
    }
    return false;
   } 



  //Ereignisse für Verbindungsüberwachung
  //Dafür in der Navleiste eine Statusfläche einbauen
  socket.on('connect', function() {
  console.log('check 2------------------------VERBUNDEN', socket.connected);
  });


  socket.on('disconnect', function() {
  console.log('check 2-----------------------GETRENNT', socket.connected);
  });



 



  //Löschen
  //Alle eingehenden WebSocket Nachrichten einhängen TYP 'chat messeage'
  socket.on('chat message',function(msg){
    $('#messages').append($('<li>').text(msg));
    //$('#messages').prepend($.text(msg));
  });

  
  //eingehende Socket Nachrichten, Statusmeldungen verarbeitebn
  socket.on('test',function(msg){
    if(typeof msg === 'object'){
     //Empfangen aktiv
     if('RX' in msg && msg.RX.$.state === '1'){
     	//suche SChaltfläche zu FunkstellenID
        button=$('#'+msg.RX.$.id).offsetParent().attr('id')
        //Schaltfläche färben
        $('#'+button+' > div').addClass( "panel-danger" )
        $('#'+button+' > div > div').addClass( "bg-danger" )
        $('#'+button+' > div > div > h2').addClass( "text-danger" )
        $('#'+button+' > div > div.panel-heading > span').text( "Empfang" )
        //Lautsprecher färben
        $('#'+button+' > div > div > div div:nth-child(1)').css( "background-color","" )
        $('#'+button+' > div > div > div div:nth-child(1)').addClass( "bg-danger" )
        $('#'+button+' > div > div > div div:nth-child(1)').addClass( "text-danger" )
        $('#'+button+' > div > div > div:nth-child(2)').addClass( "bg-danger" )
        $('#'+button+' > div > div > div:nth-child(2)').addClass( "text-danger" )


        $.notify('Empfang:'+ApFunkstellen[msg.RX.$.id].sname)
        console.log(msg.RX.$.id)
        }
     //Empfangen deaktiv
     if('RX' in msg && msg.RX.$.state === '0'){
     	//suche SChaltfläche zu FunkstellenID
        button=$('#'+msg.RX.$.id).offsetParent().attr('id')
        $('#'+button+' > div').removeClass( "panel-danger" )
        $('#'+button+' > div > div').removeClass( "bg-danger" )
        $('#'+button+' > div > div > h2').removeClass( "text-danger" )
        //Lautsprecher färben
        $('#'+button+' > div > div > div div:nth-child(1)').css( "background-color","#f5f5f5" )
        $('#'+button+' > div > div > div div:nth-child(1)').removeClass( "bg-danger" )
        $('#'+button+' > div > div > div div:nth-child(1)').removeClass( "text-danger" )
        $('#'+button+' > div > div > div:nth-child(2)').removeClass( "bg-danger" )
        $('#'+button+' > div > div > div:nth-child(2)').removeClass( "text-danger" )
        console.log(msg.RX.$.id)
        }
     //Senden aktiv
     if('TX' in msg && msg.TX.$.state === '1'){
        //suche SChaltfläche zu FunkstellenID
        button=$('#'+msg.TX.$.id).offsetParent().attr('id')
        $('#'+button+' > div').addClass( "panel-success" )
        $('#'+button+' > div > div').addClass( "bg-success" )
        $('#'+button+' > div > div > h2').addClass( "text-success" )
        //Lautsprecher färben
        $('#'+button+' > div > div > div').css( "background-color","" )
        $('#'+button+' > div > div > div').addClass( "bg-success" )
        $('#'+button+' > div > div > div)').addClass( "text-success" )
        $('#'+button+' > div > div > div:nth-child(2)').addClass( "bg-success" )
        $('#'+button+' > div > div > div:nth-child(2)').addClass( "text-success" )
                
            
        console.log(msg.TX.$.id)
        }
     //Senden deaktiv
     if('TX' in msg && msg.TX.$.state === '0'){
     	//suche SChaltfläche zu FunkstellenID
        button=$('#'+msg.TX.$.id).offsetParent().attr('id')
        $('#'+button+' > div').removeClass( "panel-success" )
        $('#'+button+' > div > div').removeClass( "bg-success" )
        $('#'+button+' > div > div > h2').removeClass( "text-success" )
        //Lautsprecher färben
        $('#'+button+' > div > div > div').css( "background-color","#f5f5f5" )
        $('#'+button+' > div > div > div').removeClass( "bg-success" )
        $('#'+button+' > div > div > div').removeClass( "text-success" )
        $('#'+button+' > div > div > div:nth-child(2)').removeClass( "bg-success" )
        $('#'+button+' > div > div > div:nth-child(2)').removeClass( "text-success" )


        console.log(msg.TX.$.id)
        }
      
     if('FSTSTATUS' in msg && msg.FSTSTATUS.$.state === '0'){
        $('#'+msg.FSTSTATUS.$.id).closest('div').removeClass( "bg-danger" )
        $('#'+msg.FSTSTATUS.$.id).closest('div').addClass( "bg-success" )
        console.log(msg.FSTSTATUS.$.id)
        
        //Bei Kanaländerung die Kanalnummer setzen
        if(msg.FSTSTATUS.$.channel > -1){
           button=$('#'+msg.FSTSTATUS.$.id).offsetParent().attr('id')
           $('#'+button+' > div > div  > h2 > span').text( msg.FSTSTATUS.$.channel )
          }

        }
     if('FSTSTATUS' in msg && msg.FSTSTATUS.$.state === '1'){
        $('#'+msg.FSTSTATUS.$.id).closest('div').removeClass( "bg-success" )
        $('#'+msg.FSTSTATUS.$.id).closest('div').addClass( "bg-danger" )
        console.log(msg.FSTSTATUS.$.id)
        }
     //Schalten für SPrechANlagen und MitHörANlagen
     if('geschaltet' in msg && msg.geschaltet.$.state === '1'){
        
        if(hatWert(ArbeitsplatzGeräte,msg.geschaltet.$.Ap)){
      
            //Ändern Darstellung für MHAN
            if(msg.geschaltet.$.Ap.indexOf("MHAN") != -1){
                $('#'+msg.geschaltet.$.Ap+'ship').parent().removeClass( "bg-success" )
                $('#'+msg.geschaltet.$.Ap+'ship').parent().addClass( "bg-primary" )
                
            }
            
            //Ändern Darstellung für SPAN
             if(msg.geschaltet.$.Ap.indexOf("SPAN") != -1){
             //suche SChaltfläche zu FunkstellenID
             button=$('#'+msg.geschaltet.$.id).offsetParent().attr('id')
             
             //$('#'+button+' > div > div.panel-heading > span').text( "aufgeschaltet" )
             $('#'+button+' > div').addClass( "panel-primary" )
             $('#'+button+' > div > div:nth-child(3)').addClass( "bg-primary" )

             ApFunkstellen[msg.geschaltet.$.id].aufgeschaltet=true
             $.notify('Aufgeschaltet:'+ApFunkstellen[msg.geschaltet.$.id].sname +'')
             console.log(msg.geschaltet.$.id)
             }
          }
       }

      //Trennen für SPrechANlagen und MitHörANlagen
     if('getrennt' in msg && msg.getrennt.$.state === '1'){

        if(hatWert(ArbeitsplatzGeräte,msg.getrennt.$.Ap)){
      
            //Ändern Darstellung für MHAN
            if(msg.getrennt.$.Ap.indexOf("MHAN") != -1){

            }
            //Ändern Darstellung für SPAN
            if(msg.getrennt.$.Ap.indexOf("SPAN") != -1){

             //suche SChaltfläche zu FunkstellenID
             button=$('#'+msg.getrennt.$.id).offsetParent().attr('id')
             //$('#'+button+' > div > div.panel-heading > span').text( "getrennt" )
             $('#'+button+' > div').removeClass( "panel-primary" )
             $('#'+button+' > div > div:nth-child(3)').removeClass( "bg-primary" )
             ApFunkstellen[msg.getrennt.$.id].aufgeschaltet=false
             $.notify('Getrennt:'+ApFunkstellen[msg.getrennt.$.id].sname +'')
             console.log(msg.getrennt.$.id)
            }
        }
      }
     }
     else{
      msgText=msg.replace("<","")
      msgText=msgText.replace("\>","")
      console.log(msgText)
      $.notify('Meldung: '+msgText)
      
      //$('#messages').append($('<li>').text(msg));
      //$('#messages').append($.text(msg));
      
      }


  });

  //Prüfe welches Element geklickt wurde
  //Vermeide aufschalten/trennen bei MKA Dropdown
  function angeklickt(e, element){
  	if(element){
  	    e=e||event
  	    var ziel=e.target||e.srcElement
  	    if(ziel.id==element.id)
  	        return true
  	    else
  	        return false
    }
    else return true
  }

  function setzeKanalMka(event,element){
  	if(angeklickt(event,element)){
  		//Eltern Element finden
  		button=$(element).offsetParent().attr('id')
        //Funkstellen ID finden
        //geklickteMKA=$('#'+button +'> div > div:nth-child(2) > div:nth-child(2) > span').attr('class')
        geklickteMKA=$('#'+button +'> div > div:nth-child(2) > div > span').attr('id')
  		console.log("Dropdown von:" + geklickteMKA)
  		
  		
  	}
  }

  //Kanalschalten
  //Prüfe zunächst ob Element geklickt wurde
  function schalteKanal(event,element,SPAN){
  	if(angeklickt(event,element)){
     if(SPAN){
         //übergeordnetes Element
             button=$('#'+element.id).offsetParent().attr('id')
             //console.log(element)
             //console.log("Klick: "+element.id)
             //console.log(button)
             
             console.log($('#'+button+' > div div:nth-child(2) > div > div:nth-child(1)').attr('id'))
             console.log($('#'+button+' > div > div:nth-child(3)').attr('id'))
             geklickteFstHaupt=$('#'+button+' > div div:nth-child(2) > div > div:nth-child(1)').attr('id')
             geklickteFstReser=$('#'+button+' > div div:nth-child(2) > div > div:nth-child(2)').attr('id')
                geklickteSPAN=($('#'+button+' > div > div:nth-child(3)').attr('id'))
    
         schalteKanalID(geklickteFstHaupt, geklickteSPAN)
     }
     else{
     	//übergeordnetes Element
             button=$('#'+element.id).offsetParent().attr('id')
             console.log(element)
             console.log("Klick: "+element.id)
             console.log(button)
             console.log($('#'+button+' div > div').attr('id'))
             
             geklickteFstHaupt=$('#'+button+' div > div:nth-child(1) > div:nth-child(1)').attr('id')
             geklickteFstReser=$('#'+button+' div > div:nth-child(1) > div:nth-child(2)').attr('id')
                geklickteMHAN=($('#'+button+' div > div').attr('id'))
    
         schalteKanalID(geklickteFstHaupt, geklickteMHAN)

     }
    


    }
  }
    


  function schalteKanalID(geklickteFstID, geklickteSPANMHAN){
    //console.log("Klick: "+geklickteID)
    //$.notify('test:'+ApFunkstellen[geklickteID].kurzname);

    if (Einzel===true){
     $.each(ApFunkstellen,function(key,value){
       if(value.aufgeschaltet===true && key != geklickteFstID){
         console.log(key,value.aufgeschaltet)
         trennen(key,geklickteSPANMHAN)
         }  
        //trenne aufgeschaltet
        })
    }

    if (ApFunkstellen[geklickteFstID].aufgeschaltet===true){
     trennen(geklickteFstID,geklickteSPANMHAN)
        
    }
    else{
    schalten(geklickteFstID,geklickteSPANMHAN)

    }
   }

   function trennen(geklickteID,geklickteSPANMHAN){
        socket.emit('chat message',{'FstID':geklickteID, 'ApID':ApID, 'SPAN':geklickteSPANMHAN, 'aktion':'trennenEinfach'})
        $.notify('Trenne: '+ApFunkstellen[geklickteID].sname +' ...');
        //ApFunkstellen[geklickteID].aufgeschaltet=false

        //$('#'+geklickteID+'-Panel > div').removeClass( "panel-primary" )
        //$('#'+geklickteID+'-Panel > div > div.panel-heading > span').text( "getrennt" )
   }

   function schalten(geklickteID,geklickteSPANMHAN){
      socket.emit('chat message',{'FstID':geklickteID, 'ApID':ApID, 'SPAN':geklickteSPANMHAN, 'aktion':'schaltenEinfach'})
      $.notify('Schalte: '+ApFunkstellen[geklickteID].sname +' ...')
      
      //ApFunkstellen[geklickteID].aufgeschaltet=true
      //$('#'+geklickteID+'-Panel > div > div.panel-heading > span').text( "aufgeschaltet" )
      //$('#'+geklickteID+'-Panel > div').addClass( "panel-primary" )
      //$('.popover-title').css("color", "black"); $('.popover').css("color", "black");

   }

   
   
   
  

   

   

   function setzeLautstärke(geklickteID, level){
    

    console.log("Klick: Lautstärke "+geklickteID)
    console.log($('#'+geklickteID).prev().text())
    var aktuellerPegel=parseInt($('#'+geklickteID).prev().text())
    MhanID=geklickteID.replace('ship_pegel','')
    test1=$('#'+geklickteID).offsetParent().attr('id')
    
    test2=$('#'+test1+' > div > div > div:nth-child(3) > div:nth-child(1)')
    geklickteFstHaupt=test2[1].id
    
    socket.emit('chat message',{'FstID':geklickteFstHaupt, 'SPAN':MhanID, 'aktion':'SetzeAudioPegel', 'Kanal':level})
      $.notify('Lautstärke: '+ApFunkstellen[geklickteFstHaupt].sname +' ...')


        /**
        $('#ex1').slider('setValue', aktuellerPegel)
        $('#ex1').on('slide', function (ev) {
            //sliderVal = ev.value;
        $('#'+geklickteID).prev().text(ev.value)

        });
        **/
    
   
    }
    


    

   function gruppen(buttonID){
    
    //Wechsel zu Gruppenschaltung
    if (Einzel===true){
      Einzel=false
      einzelStatus=JSON.stringify(ApFunkstellen)//speichere geschalteten Zustand
      $('#'+buttonID).toggleClass("active")
      $('#'+buttonID+' > a').text("Gruppenschaltung")
      zustandWiederherstellen(JSON.parse(gruppenStatus))// lade Gruppenzustand
     }

    else{
      Einzel=true
      gruppenStatus=JSON.stringify(ApFunkstellen)//speichere geschalteten Zustand
      $('#'+buttonID).toggleClass("active")
      $('#'+buttonID+' > a').text("Einzelschaltung")
      zustandWiederherstellen(JSON.parse(einzelStatus))//lade Einzelzustand

     }

   }

   function zustandWiederherstellen(AufschalteZustand){
    //Backup, da die Funktionen schalten und trennen mit Rückmeldung schon in ApFunkstellen schreiben
    backupApFunkstellen=ApFunkstellen
    $.each(backupApFunkstellen,function(key,value){
       if (value.aufgeschaltet== true && AufschalteZustand[key].aufgeschaltet== true)  {
       	//nix
       }
       if (value.aufgeschaltet== true && AufschalteZustand[key].aufgeschaltet== false)  {
        //trennen
        trennen(AufschalteZustand[key].id,SPAN)
       }
       if (value.aufgeschaltet== false && AufschalteZustand[key].aufgeschaltet== true)  {
        //schalten
        schalten(AufschalteZustand[key].id,SPAN)
       }
       if (value.aufgeschaltet== false && AufschalteZustand[key].aufgeschaltet== false)  {
        //nix
       }
    })


    //console.log("Funkstellen ID nicht vorhanden: "+Id)	
    }

  function setzeKanal(element){
   	
   	console.log('chat message',{'FstID':geklickteMKA, 'Kanal':element.innerText, 'aktion':'setzeKanal'})
   	socket.emit('chat message',{'FstID':geklickteMKA, 'Kanal':element.innerText, 'aktion':'setzeKanal'})
    //  $.notify('Setze Kanal: '+ApFunkstellen[geklickteMKA].sname +' auf '+ element.innerText +' ...')
   }



   
  
     
    
  

   
